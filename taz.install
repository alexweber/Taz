<?php
/**
 * @file
 * Taz profile installation hooks.
 */

/**
 * Implements hook_install().
 *
 * Perform actions to set up the site for this profile.
 */
function taz_install() {
  // Set the default and admin themes
  variable_set("theme_default", "bartik");
  variable_set("admin_theme", "fubik");
  variable_set("node_admin_theme", '1');
  theme_enable(array("bartik"));

  taz_set_default_text_formats_and_perms();
  taz_set_wysiwyg_settings();

  // Set up date defaults so it doesn't yell at us anymore.
  variable_set('date_first_day', 1);
  variable_set('date_format_long', 'l, F j, Y - H:i');
  variable_set('date_format_medium', 'D, Y-m-d H:i');
  variable_set('date_format_short', 'Y-m-d H:i');
  variable_set('date_default_timezone', 'America/Denver');
  variable_set('configurable_timezones', 0);

  // Set private file path.
  variable_set('file_private_path', 'private');

  // Set media browser settings.
  variable_set('media__wysiwyg_browser_plugins ', array(
    'upload' => 'upload',
    'media_default--media_browser_1' => 'media_default--media_browser_1',
    'media_default--media_browser_my_files' => 'media_default--media_browser_my_files',
    'library' => 0,
  ));

  // Enable transliteration.
  variable_set('pathauto_transliterate', 1);
  variable_set('transliteration_file_uploads', 1);
  variable_set('transliteration_file_lowercase', 1);

  // Set Pathauto default.
  variable_set('pathauto_node_pattern', 'node/[node:nid]');

  // Don't allow visitor accounts.
  variable_set('user_register', USER_REGISTER_ADMINISTRATORS_ONLY);

  // Display all errors.
  variable_set('error_level', 2);

  // Enable backtrace error handler.
  variable_set('devel_error_handlers', array(1 => 1, 4 => 4));

  // Cache Admin menu.
  variable_set('admin_menu_cache_client', 1);

  // Use easing with iToggle.
  variable_set('itoggle_easing_use', 1);

  // Enable dynamic module filter button placement.
  variable_set('module_filter_dynamic_save_position', 1);

  taz_set_backup_migrate();
}

/**
 * Provides default text formats for Taz.
 */
function taz_set_default_text_formats_and_perms() {
  // Add text formats.
  $filtered_html_format = array(
    'format' => 'filtered_html',
    'name' => 'Filtered HTML',
    'weight' => -9,
    'filters' => array(
      // URL filter.
      'filter_url' => array(
        'weight' => 0,
        'status' => 1,
      ),
      // HTML filter.
      'filter_html' => array(
        'weight' => -10,
        'status' => 1,
      ),
      // Line break filter.
      'filter_autop' => array(
        'weight' => 0,
        'status' => 1,
      ),
      // HTML corrector filter.
      'filter_htmlcorrector' => array(
        'weight' => 10,
        'status' => 1,
      ),
      // Media filter.
      'media_filter' => array(
        'weight' => 2,
        'status' => 1,
      ),
    ),
  );
  $filtered_html_format = (object) $filtered_html_format;
  filter_format_save($filtered_html_format);

  // Enable default permissions for system roles.
  $filtered_html_permission = filter_permission_name($filtered_html_format);
  // Don't allow anonymous user to use Filtered HTML.
  user_role_grant_permissions(DRUPAL_ANONYMOUS_RID, array('access content'));
  user_role_grant_permissions(DRUPAL_AUTHENTICATED_RID, array('access content', $filtered_html_permission));

  $full_html_format = array(
    'format' => 'full_html',
    'name' => 'Full HTML',
    'weight' => -10,
    'filters' => array(
      // URL filter.
      'filter_url' => array(
        'weight' => 0,
        'status' => 1,
      ),
      // HTML filter.
      'filter_html' => array(
        'weight' => -10,
        'status' => 1,
      ),
      // Line break filter.
      'filter_autop' => array(
        'weight' => 0,
        'status' => 1,
      ),
      // HTML corrector filter.
      'filter_htmlcorrector' => array(
        'weight' => 10,
        'status' => 1,
      ),
      // Media filter.
      'media_filter' => array(
        'weight' => 2,
        'status' => 1,
      ),
    ),
  );
  $full_html_format = (object) $full_html_format;
  filter_format_save($full_html_format);

  // Only admin can use Full HTML.

  $raw_html_format = array(
    'format' => 'raw_html',
    'name' => 'Raw HTML',
    'weight' => -1,
    'filters' => array(),
  );
  $raw_html_format = (object) $raw_html_format;
  filter_format_save($raw_html_format);

  // Only admin can use Raw HTML.
  // Create a default role for site administrators, with all available permissions assigned.
  $admin_role = new stdClass();
  $admin_role->name = 'administrator';
  $admin_role->weight = 2;
  user_role_save($admin_role);
  user_role_grant_permissions($admin_role->rid, array_keys(module_invoke_all('permission')));

  // Set this as the administrator role.
  variable_set('user_admin_role', $admin_role->rid);

  // Assign user 1 the "administrator" role.
  db_insert('users_roles')
    ->fields(array('uid' => 1, 'rid' => $admin_role->rid))
    ->execute();
}

/**
 * Sets default WYSIWYG settings for Taz.
 */
function taz_set_wysiwyg_settings() {
  $settings_full = array(
    'default' => 1,
    'user_choose' => 0,
    'show_toggle' => 1,
    'theme' => 'advanced',
    'language' => 'en',
    'buttons' => array(
      'default' => array(
        'bold' => 1,
        'italic' => 1,
        'underline' => 1,
        'justifyleft' => 1,
        'justifycenter' => 1,
        'justifyright' => 1,
        'justifyfull' => 1,
        'bullist' => 1,
        'numlist' => 1,
        'undo' => 1,
        'redo' => 1,
        'forecolor' => 1,
        'backcolor' => 1,
        'blockquote' => 1,
      ),
      'advimage' => array(
        'advimage' => 1,
      ),
      'advlink' => array(
        'advlink' => 1,
      ),
      'drupal' => array(
        'media' => 1,
      ),
    ),
    'toolbar_loc' => 'top',
    'toolbar_align' => 'left',
    'path_loc' => 'bottom',
    'resizing' => 1,
    'verify_html' => 1,
    'preformatted' => 0,
    'convert_fonts_to_spans' => 1,
    'remove_linebreaks' => 1,
    'apply_source_formatting' => 0,
    'paste_auto_cleanup_on_paste' => 1,
    'block_formats' => 'p,address,pre,h2,h3,h4,h5,h6,div',
    'css_setting' => 'theme',
    'css_path' => '',
    'css_classes' => '',
  );

  $fields = array(
    'format' => 'full_html',
    'editor' => 'tinymce',
    'settings' => serialize($settings_full),
  );

  db_insert('wysiwyg')->fields($fields)->execute();

  $settings_filtered = array(
    'default' => 1,
    'user_choose' => 0,
    'show_toggle' => 1,
    'theme' => 'advanced',
    'language' => 'en',
    'buttons' => array(
      'default' => array(
        'bold' => 1,
        'italic' => 1,
        'underline' => 1,
        'bullist' => 1,
        'numlist' => 1,
        'undo' => 1,
        'redo' => 1,
        'link' => 1,
        'unlink' => 1,
      ),
      'drupal' => array(
        'media' => 1,
      ),
    ),
    'toolbar_loc' => 'top',
    'toolbar_align' => 'left',
    'path_loc' => 'bottom',
    'resizing' => 1,
    'verify_html' => 1,
    'preformatted' => 0,
    'convert_fonts_to_spans' => 1,
    'remove_linebreaks' => 1,
    'apply_source_formatting' => 0,
    'paste_auto_cleanup_on_paste' => 1,
    'block_formats' => 'p,address,pre,h2,h3,h4,h5,h6,div',
    'css_setting' => 'theme',
    'css_path' => '',
    'css_classes' => '',
  );

  $fields = array(
    'format' => 'filtered_html',
    'editor' => 'tinymce',
    'settings' => serialize($settings_filtered),
  );

  db_insert('wysiwyg')->fields($fields)->execute();

  db_update('filter_format')
    ->condition('format', 'filtered_html')
    ->fields(array('weight' => 1))
    ->execute();

  db_update('filter_format')
    ->condition('format', 'full_html')
    ->fields(array('weight' => 0))
    ->execute();
}

/**
 * Sets Backup & Migrate destinations, profiles and schedules for Taz.
 */
function taz_set_backup_migrate() {
  // Set destination.
  $fields = array(
    'destination_id' => 'db4568d60b719eff0860897b7d5f344f',
    'name' => 'Dev Snapshot',
    'type' => 'file',
    'location' => 'private://backup_migrate/scheduled/snapshot',
    'settings' => serialize(array()),
  );

  db_insert('backup_migrate_desinations')->fields($fields)->execute();

  $filters = array(
    'compression' => 'gzip',
    'notify_success_enable' => 0,
    'notify_failure_enable' => 0,
    'utils_site_offline' => 0,
    'utils_site_offline_message' => 'Taz is currently under maintenance. We should be back shortly. Thank you for your patience.',
    'utils_description' => '',
    'destinations' => array(
      'db' => array(
        'exclude_tables' => array(),
        'nodata_tables' => array(
          'cache' => 'cache',
          'cache_admin_menu' => 'cache_admin_menu',
          'cache_block' => 'cache_block',
          'cache_bootstrap' => 'cache_bootstrap',
          'cache_field' => 'cache_field',
          'cache_filter' => 'cache_filter',
          'cache_form' => 'cache_form',
          'cache_image' => 'cache_image',
          'cache_l10n_update' => 'cache_l10n_update',
          'cache_media_xml' => 'cache_media_xml',
          'cache_menu' => 'cache_menu',
          'cache_page' => 'cache_page',
          'cache_path' => 'cache_path',
          'cache_token' => 'cache_token',
          'cache_update' => 'cache_update',
          'cache_views' => 'cache_views',
          'cache_views_data' => 'cache_views_data',
          'ctools_css_cache' => 'ctools_css_cache',
          'ctools_object_cache' => 'ctools_object_cache',
          'search_dataset' => 'search_dataset',
          'search_index' => 'search_index',
          'search_total' => 'search_total',
          'sessions' => 'sessions',
        ),
        'utils_lock_tables' => 0,
        'use_mysqldump' => 0,
      ),
    ),
  );

  // Set profiles.
  $fields = array(
    'profile_id' => '',
    'name' => 'Dev Snapshot',
    'filename' => '[site:name]',
    'append_timestamp' => '0',
    'timestamp_format' => 'Y-m-d\TH-i-s',
    'filters' => serialize($filters),
  );

  db_insert('backup_migrate_profiles')->fields($fields)->execute();

  $fields = array(
    'profile_id' => 'default',
    'name' => 'Default settings',
    'filename' => '[site:name]',
    'append_timestamp' => '1',
    'timestamp_format' => 'Y-m-d\TH-i-s',
    'filters' => serialize($filters),
  );

  db_update('backup_migrate_profiles')
  ->condition('profile_id', 'default')
  ->fields($fields)
  ->execute();

  // Set schedules.
  $fields = array(
    'schedule_id' => '5bd8bb83f92425d6fa282874dd7e3706',
    'name' => 'Daily Backup',
    'source_id' => 'db',
    'destination_id' => 'scheduled',
    'profile_id' => 'default',
    'keep' => 90,
    'period' => 28800,
    'enabled' => 1,
    'cron' => 1,
  );

  db_insert('backup_migrate_schedules')->fields($fields)->execute();

  $fields = array(
    'schedule_id' => '7b7474b0983cc65bc0ceab04e032a218',
    'name' => 'Dev Snapshot',
    'source_id' => 'db',
    'destination_id' => 'db4568d60b719eff0860897b7d5f344f',
    'profile_id' => 'c448b0b687b26069640579b972675991',
    'keep' => 7,
    'period' => 43200,
    'enabled' => 1,
    'cron' => 1,
  );

  db_insert('backup_migrate_schedules')->fields($fields)->execute();
}